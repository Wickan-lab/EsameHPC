Qui abbiamo preso le misure con 5000 e 8000 elementi in matrici quadrate, con opzione O2 in gcc e senza for ottimizzato
2021-04-06 09:34:40,033 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-06 09:34:40,033 Means : {'SIZE-5000-NTH-0-1617451746.csv': {'elapsed': 0.20804659498207886, 'user': 0.1558378136200717, 'sys': 0.047240143369175626}, 
'SIZE-5000-NTH-0-1617452782.csv': {'elapsed': 0.212506, 'user': 0.15893599999999997, 'sys': 0.048086}, 
'SIZE-5000-NTH-1-1617456682.csv': {'elapsed': 0.12, 'user': 0.06525600000000001, 'sys': 0.048464}, 
'SIZE-5000-NTH-2-1617458913.csv': {'elapsed': 0.076552, 'user': 0.088184, 'sys': 0.06343800000000001}, 
'SIZE-5000-NTH-4-1617460393.csv': {'elapsed': 0.050212, 'user': 0.134828, 'sys': 0.086704}, 
'SIZE-5000-NTH-8-1617461490.csv': {'elapsed': 0.049964, 'user': 0.25777799999999995, 'sys': 0.13384200000000002}, 
'SIZE-8000-NTH-0-1617453886.csv': {'elapsed': 0.549692, 'user': 0.414342, 'sys': 0.130562}, 
'SIZE-8000-NTH-1-1617457325.csv': {'elapsed': 0.3102, 'user': 0.174816, 'sys': 0.12982600000000002}, 
'SIZE-8000-NTH-2-1617459342.csv': {'elapsed': 0.19991599999999995, 'user': 0.23135799999999998, 'sys': 0.16779999999999998}, 
'SIZE-8000-NTH-4-1617460715.csv': {'elapsed': 0.14267000000000002, 'user': 0.350972, 'sys': 0.23028400000000002}, 
'SIZE-8000-NTH-8-1617461779.csv': {'elapsed': 0.12338200000000002, 'user': 0.604986, 'sys': 0.353248}}

2021-04-06 09:34:40,033 ------------------------------
2021-04-06 09:34:40,033 Speedup P = 0 & Problem Size = 5000 -> 1.0
2021-04-06 09:34:40,033 ------------------------------
2021-04-06 09:34:40,033 ------------------------------
2021-04-06 09:34:40,033 Speedup P = 0 & Problem Size = 5000 -> 1.0
2021-04-06 09:34:40,033 ------------------------------
2021-04-06 09:34:40,033 ------------------------------
2021-04-06 09:34:40,033 Speedup P = 1 & Problem Size = 5000 -> 1.7708833333333334
2021-04-06 09:34:40,033 ------------------------------
2021-04-06 09:34:40,034 ------------------------------
2021-04-06 09:34:40,034 Speedup P = 2 & Problem Size = 5000 -> 2.7759692757863936
2021-04-06 09:34:40,034 ------------------------------
2021-04-06 09:34:40,034 ------------------------------
2021-04-06 09:34:40,034 Speedup P = 4 & Problem Size = 5000 -> 4.232175575559627
2021-04-06 09:34:40,034 ------------------------------
2021-04-06 09:34:40,034 ------------------------------
2021-04-06 09:34:40,034 Speedup P = 8 & Problem Size = 5000 -> 4.2531822912497
2021-04-06 09:34:40,034 ------------------------------
2021-04-06 09:34:40,034 ------------------------------
2021-04-06 09:34:40,034 Speedup P = 0 & Problem Size = 8000 -> 1.0
2021-04-06 09:34:40,034 ------------------------------
2021-04-06 09:34:40,034 ------------------------------
2021-04-06 09:34:40,034 Speedup P = 1 & Problem Size = 8000 -> 1.7720567375886525
2021-04-06 09:34:40,034 ------------------------------
2021-04-06 09:34:40,034 ------------------------------
2021-04-06 09:34:40,034 Speedup P = 2 & Problem Size = 8000 -> 2.7496148382320578
2021-04-06 09:34:40,034 ------------------------------
2021-04-06 09:34:40,034 ------------------------------
2021-04-06 09:34:40,034 Speedup P = 4 & Problem Size = 8000 -> 3.8528912875867376
2021-04-06 09:34:40,034 ------------------------------
2021-04-06 09:34:40,034 ------------------------------
2021-04-06 09:34:40,034 Speedup P = 8 & Problem Size = 8000 -> 4.455204162681752
2021-04-06 09:34:40,034 ------------------------------

Qui invece abbiamo preso il for ottimizzato e ridotto il numero di misure per velocizzare il processo. Lo abbiamo fatto anche perchÃ¨ abbiamo visto che le misure si dispongono in delta, ovvero sono tutte vicine.
Non abbiamo le sections con la malloc per i vettori
2021-04-06 10:35:49,795 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-06 10:35:49,795 Means : {'SIZE-10000-NTH-0-1617696498.csv': {'elapsed': 0.4008400000000001, 'user': 0.18980000000000002, 'sys': 0.20516}, 
'SIZE-10000-NTH-1-1617696899.csv': {'elapsed': 0.4012600000000001, 'user': 0.19066, 'sys': 0.20568},
'SIZE-10000-NTH-2-1617697253.csv': {'elapsed': 0.26748, 'user': 0.2512, 'sys': 0.26614},
'SIZE-10000-NTH-4-1617697514.csv': {'elapsed': 0.22526, 'user': 0.42529999999999996, 'sys': 0.36856}, 
'SIZE-10000-NTH-8-1617697739.csv': {'elapsed': 0.20068, 'user': 0.88078, 'sys': 0.58052}, 
'SIZE-2000-NTH-0-1617696306.csv': {'elapsed': 0.01008, 'user': 0.00146, 'sys': 0.0018}, 
'SIZE-2000-NTH-1-1617696702.csv': {'elapsed': 0.01, 'user': 0.0032600000000000003, 'sys': 0.00432}, 
'SIZE-2000-NTH-2-1617697104.csv': {'elapsed': 0.01, 'user': 0.01, 'sys': 0.00916}, 
'SIZE-2000-NTH-4-1617697390.csv': {'elapsed': 0.00954, 'user': 0.01804, 'sys': 0.0107}, 
'SIZE-2000-NTH-8-1617697632.csv': {'elapsed': 0.003, 'user': 0.03564, 'sys': 0.020939999999999997}, 
'SIZE-5000-NTH-0-1617696315.csv': {'elapsed': 0.09474, 'user': 0.04158, 'sys': 0.04538000000000001}, 
'SIZE-5000-NTH-1-1617696713.csv': {'elapsed': 0.1, 'user': 0.045320000000000006, 'sys': 0.04850000000000001}, 
'SIZE-5000-NTH-2-1617697114.csv': {'elapsed': 0.08768, 'user': 0.08296, 'sys': 0.07486000000000001}, 
'SIZE-5000-NTH-4-1617697398.csv': {'elapsed': 0.059780000000000014, 'user': 0.14044, 'sys': 0.09370000000000002}, 
'SIZE-5000-NTH-8-1617697640.csv': {'elapsed': 0.0495, 'user': 0.24453999999999998, 'sys': 0.14326}, 
'SIZE-8000-NTH-0-1617696365.csv': {'elapsed': 0.25617999999999996, 'user': 0.12014000000000001, 'sys': 0.13136}, 
'SIZE-8000-NTH-1-1617696767.csv': {'elapsed': 0.25582, 'user': 0.12064000000000001, 'sys': 0.12994}, 
'SIZE-8000-NTH-2-1617697161.csv': {'elapsed': 0.17347999999999997, 'user': 0.16924, 'sys': 0.17201999999999998}, 
'SIZE-8000-NTH-4-1617697432.csv': {'elapsed': 0.15339999999999998, 'user': 0.32032, 'sys': 0.2405}, 
'SIZE-8000-NTH-8-1617697669.csv': {'elapsed': 0.13037999999999997, 'user': 0.62142, 'sys': 0.37832}}

2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 Speedup P = 0 & Problem Size = 10000 -> 1.0
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 Speedup P = 1 & Problem Size = 10000 -> 0.9989532971140905
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 Speedup P = 2 & Problem Size = 10000 -> 1.4985793330342458
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 Speedup P = 4 & Problem Size = 10000 -> 1.7794548521708253
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 Speedup P = 8 & Problem Size = 10000 -> 1.9974088100458445
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 Speedup P = 0 & Problem Size = 2000 -> 1.0
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 Speedup P = 1 & Problem Size = 2000 -> 1.008
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 Speedup P = 2 & Problem Size = 2000 -> 1.008
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,795 Speedup P = 4 & Problem Size = 2000 -> 1.0566037735849056
2021-04-06 10:35:49,795 ------------------------------
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 Speedup P = 8 & Problem Size = 2000 -> 3.36
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 Speedup P = 0 & Problem Size = 5000 -> 1.0
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 Speedup P = 1 & Problem Size = 5000 -> 0.9474
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 Speedup P = 2 & Problem Size = 5000 -> 1.080520072992701
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 Speedup P = 4 & Problem Size = 5000 -> 1.5848109735697555
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 Speedup P = 8 & Problem Size = 5000 -> 1.913939393939394
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 Speedup P = 0 & Problem Size = 8000 -> 1.0
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 Speedup P = 1 & Problem Size = 8000 -> 1.001407239465249
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 Speedup P = 2 & Problem Size = 8000 -> 1.4767120129121514
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 Speedup P = 4 & Problem Size = 8000 -> 1.670013037809648
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 ------------------------------
2021-04-06 10:35:49,796 Speedup P = 8 & Problem Size = 8000 -> 1.9648719128700722
2021-04-06 10:35:49,796 ------------------------------

Rimesse sections nella malloc, for optimized
2021-04-06 12:33:43,631 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-06 12:33:43,631 Means : {'SIZE-10000-NTH-0-1617699907.csv': {'elapsed': 0.7734599999999999, 'user': 0.56186, 'sys': 0.20806}, 
'SIZE-10000-NTH-1-1617699907.csv': {'elapsed': 0.43101999999999996, 'user': 0.21828000000000003, 'sys': 0.20684000000000002}, 
'SIZE-10000-NTH-2-1617699907.csv': {'elapsed': 0.2808200000000001, 'user': 0.28852, 'sys': 0.26468}, 
'SIZE-10000-NTH-4-1617699907.csv': {'elapsed': 0.21156, 'user': 0.44220000000000004, 'sys': 0.3592}, 
'SIZE-10000-NTH-8-1617699907.csv': {'elapsed': 0.19009999999999996, 'user': 0.83232, 'sys': 0.54374}, 
'SIZE-2000-NTH-0-1617699907.csv': {'elapsed': 0.02006, 'user': 0.014, 'sys': 0.0028399999999999996}, 
'SIZE-2000-NTH-1-1617699907.csv': {'elapsed': 0.01002, 'user': 0.004600000000000001, 'sys': 0.004300000000000001}, 
'SIZE-2000-NTH-2-1617699907.csv': {'elapsed': 0.01, 'user': 0.007679999999999999, 'sys': 0.006560000000000001}, 
'SIZE-2000-NTH-4-1617699907.csv': {'elapsed': 0.00074, 'user': 0.015519999999999999, 'sys': 0.00916}, 
'SIZE-2000-NTH-8-1617699907.csv': {'elapsed': 0.00198, 'user': 0.03914, 'sys': 0.01742}, 
'SIZE-5000-NTH-0-1617699907.csv': {'elapsed': 0.18853999999999996, 'user': 0.13552, 'sys': 0.04842000000000001}, 
'SIZE-5000-NTH-1-1617699907.csv': {'elapsed': 0.10772000000000002, 'user': 0.05174000000000001, 'sys': 0.048500000000000015}, 
'SIZE-5000-NTH-2-1617699907.csv': {'elapsed': 0.07000000000000003, 'user': 0.07138000000000001, 'sys': 0.06404}, 
'SIZE-5000-NTH-4-1617699907.csv': {'elapsed': 0.04988000000000001, 'user': 0.11720000000000001, 'sys': 0.08646000000000001}, 
'SIZE-5000-NTH-8-1617699907.csv': {'elapsed': 0.04908, 'user': 0.24953999999999996, 'sys': 0.13110000000000002}, 
'SIZE-8000-NTH-0-1617699907.csv': {'elapsed': 0.4975400000000001, 'user': 0.36103999999999997, 'sys': 0.13102}, 
'SIZE-8000-NTH-1-1617699907.csv': {'elapsed': 0.27534000000000003, 'user': 0.13888, 'sys': 0.1304}, 
'SIZE-8000-NTH-2-1617699907.csv': {'elapsed': 0.17958, 'user': 0.18948, 'sys': 0.16938}, 
'SIZE-8000-NTH-4-1617699907.csv': {'elapsed': 0.13354, 'user': 0.30879999999999996, 'sys': 0.23092000000000001}, 
'SIZE-8000-NTH-8-1617699907.csv': {'elapsed': 0.12074000000000004, 'user': 0.59592, 'sys': 0.35072000000000003}}

2021-04-06 12:33:43,631 ------------------------------
2021-04-06 12:33:43,631 Speedup P = 0 & Problem Size = 10000 -> 1.0
2021-04-06 12:33:43,631 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 1 & Problem Size = 10000 -> 1.7944874947798246
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 2 & Problem Size = 10000 -> 2.754291004914178
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 4 & Problem Size = 10000 -> 3.655984117980714
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 8 & Problem Size = 10000 -> 4.068700683850605
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 0 & Problem Size = 2000 -> 1.0
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 1 & Problem Size = 2000 -> 2.001996007984032
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 2 & Problem Size = 2000 -> 2.0060000000000002
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 4 & Problem Size = 2000 -> 27.10810810810811
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 8 & Problem Size = 2000 -> 10.131313131313131
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 0 & Problem Size = 5000 -> 1.0
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 1 & Problem Size = 5000 -> 1.7502784998143326
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 2 & Problem Size = 5000 -> 2.6934285714285693
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 4 & Problem Size = 5000 -> 3.779871692060945
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 8 & Problem Size = 5000 -> 3.8414832925835363
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 0 & Problem Size = 8000 -> 1.0
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 1 & Problem Size = 8000 -> 1.8070022517614588
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 Speedup P = 2 & Problem Size = 8000 -> 2.770575787949661
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,632 ------------------------------
2021-04-06 12:33:43,633 Speedup P = 4 & Problem Size = 8000 -> 3.7257750486745556
2021-04-06 12:33:43,633 ------------------------------
2021-04-06 12:33:43,633 ------------------------------
2021-04-06 12:33:43,633 Speedup P = 8 & Problem Size = 8000 -> 4.120755342057312
2021-04-06 12:33:43,633 ------------------------------

Test schedule static, chunk of for rows/threads and for optimized, with sections.
2021-04-06 15:53:53,641 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-06 15:53:53,641 Means : {'SIZE-10000-NTH-0-1617707438.csv': {'elapsed': 0.7730999999999999, 'user': 0.5615, 'sys': 0.20792000000000002}, 
'SIZE-10000-NTH-1-1617707438.csv': {'elapsed': 0.43108, 'user': 0.22030000000000002, 'sys': 0.20496}, 
'SIZE-10000-NTH-2-1617707438.csv': {'elapsed': 0.2812600000000001, 'user': 0.28712, 'sys': 0.26644}, 
'SIZE-10000-NTH-4-1617707438.csv': {'elapsed': 0.21186000000000002, 'user': 0.44122, 'sys': 0.36079999999999995}, 
'SIZE-10000-NTH-8-1617707438.csv': {'elapsed': 0.19007999999999997, 'user': 0.8391400000000001, 'sys': 0.5418}, 
'SIZE-2000-NTH-0-1617707320.csv': {'elapsed': 0.0, 'user': 0.0, 'sys': 0.0}, 
'SIZE-2000-NTH-0-1617707438.csv': {'elapsed': 0.02006, 'user': 0.01384, 'sys': 0.00238}, 
'SIZE-2000-NTH-1-1617707438.csv': {'elapsed': 0.01, 'user': 0.004640000000000001, 'sys': 0.004279999999999999}, 
'SIZE-2000-NTH-2-1617707438.csv': {'elapsed': 0.01, 'user': 0.00758, 'sys': 0.00632}, 
'SIZE-2000-NTH-4-1617707438.csv': {'elapsed': 0.0009400000000000001, 'user': 0.015439999999999999, 'sys': 0.00928}, 
'SIZE-2000-NTH-8-1617707438.csv': {'elapsed': 0.0017, 'user': 0.0387, 'sys': 0.01692}, 
'SIZE-5000-NTH-0-1617707438.csv': {'elapsed': 0.18889999999999998, 'user': 0.13662, 'sys': 0.04760000000000001}, 
'SIZE-5000-NTH-1-1617707438.csv': {'elapsed': 0.10806000000000003, 'user': 0.05184000000000001, 'sys': 0.048220000000000006}, 
'SIZE-5000-NTH-2-1617707438.csv': {'elapsed': 0.07000000000000003, 'user': 0.07162, 'sys': 0.06402000000000001}, 
'SIZE-5000-NTH-4-1617707438.csv': {'elapsed': 0.04982000000000001, 'user': 0.11744000000000002, 'sys': 0.08688}, 
'SIZE-5000-NTH-8-1617707438.csv': {'elapsed': 0.04888, 'user': 0.25001999999999996, 'sys': 0.13164}, 
'SIZE-8000-NTH-0-1617707438.csv': {'elapsed': 0.49426000000000003, 'user': 0.35903999999999997, 'sys': 0.12972}, 
'SIZE-8000-NTH-1-1617707438.csv': {'elapsed': 0.27508000000000005, 'user': 0.13942000000000002, 'sys': 0.13008}, 
'SIZE-8000-NTH-2-1617707438.csv': {'elapsed': 0.17959999999999998, 'user': 0.19035999999999997, 'sys': 0.16829999999999998}, 
'SIZE-8000-NTH-4-1617707438.csv': {'elapsed': 0.13363999999999998, 'user': 0.3071, 'sys': 0.23246}, 
'SIZE-8000-NTH-8-1617707438.csv': {'elapsed': 0.12120000000000002, 'user': 0.5982799999999999, 'sys': 0.35084000000000004}}

2021-04-06 15:53:53,641 ------------------------------
2021-04-06 15:53:53,641 Speedup P = 0 & Problem Size = 10000 -> 1.0
2021-04-06 15:53:53,641 ------------------------------
2021-04-06 15:53:53,641 ------------------------------
2021-04-06 15:53:53,641 Speedup P = 1 & Problem Size = 10000 -> 1.7934026166836778
2021-04-06 15:53:53,641 ------------------------------
2021-04-06 15:53:53,641 ------------------------------
2021-04-06 15:53:53,641 Speedup P = 2 & Problem Size = 10000 -> 2.74870226836379
2021-04-06 15:53:53,641 ------------------------------
2021-04-06 15:53:53,641 ------------------------------
2021-04-06 15:53:53,641 Speedup P = 4 & Problem Size = 10000 -> 3.6491079014443493
2021-04-06 15:53:53,641 ------------------------------
2021-04-06 15:53:53,641 ------------------------------
2021-04-06 15:53:53,641 Speedup P = 8 & Problem Size = 10000 -> 4.067234848484849
2021-04-06 15:53:53,641 ------------------------------
2021-04-06 15:53:53,641 ------------------------------
2021-04-06 15:53:53,641 Speedup P = 0 & Problem Size = 2000-> Divide By Zero
2021-04-06 15:53:53,641 Speedup P = 0 & Problem Size = 2000 -> nan
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 Speedup P = 0 & Problem Size = 2000 -> 1.0
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 Speedup P = 1 & Problem Size = 2000 -> 2.0060000000000002
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 Speedup P = 2 & Problem Size = 2000 -> 2.0060000000000002
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 Speedup P = 4 & Problem Size = 2000 -> 21.340425531914892
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 Speedup P = 8 & Problem Size = 2000 -> 11.8
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 Speedup P = 0 & Problem Size = 5000 -> 1.0
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 Speedup P = 1 & Problem Size = 5000 -> 1.7481029057930773
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 Speedup P = 2 & Problem Size = 5000 -> 2.698571428571427
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 Speedup P = 4 & Problem Size = 5000 -> 3.7916499397832184
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 Speedup P = 8 & Problem Size = 5000 -> 3.8645662847790505
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 Speedup P = 0 & Problem Size = 8000 -> 1.0
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,642 Speedup P = 1 & Problem Size = 8000 -> 1.7967863894139884
2021-04-06 15:53:53,642 ------------------------------
2021-04-06 15:53:53,643 ------------------------------
2021-04-06 15:53:53,643 Speedup P = 2 & Problem Size = 8000 -> 2.752004454342985
2021-04-06 15:53:53,643 ------------------------------
2021-04-06 15:53:53,643 ------------------------------
2021-04-06 15:53:53,643 Speedup P = 4 & Problem Size = 8000 -> 3.6984435797665376
2021-04-06 15:53:53,643 ------------------------------
2021-04-06 15:53:53,643 ------------------------------
2021-04-06 15:53:53,643 Speedup P = 8 & Problem Size = 8000 -> 4.078052805280528
2021-04-06 15:53:53,643 ------------------------------

Guided.
2021-04-06 18:53:48,355 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-06 18:53:48,355 Means : {'SIZE-10000-NTH-0-1617725186.csv': {'elapsed': 0.7770999999999999, 'user': 0.56462, 'sys': 0.20868}, 
'SIZE-10000-NTH-1-1617725186.csv': {'elapsed': 0.40342000000000006, 'user': 0.19106, 'sys': 0.20752}, 
'SIZE-10000-NTH-2-1617725186.csv': {'elapsed': 0.2687, 'user': 0.25260000000000005, 'sys': 0.26862}, 
'SIZE-10000-NTH-4-1617725186.csv': {'elapsed': 0.20116000000000003, 'user': 0.39736, 'sys': 0.36252}, 
'SIZE-10000-NTH-8-1617725186.csv': {'elapsed': 0.18018, 'user': 0.75602, 'sys': 0.5581199999999998}, 
'SIZE-5000-NTH-0-1617725186.csv': {'elapsed': 0.18202, 'user': 0.1317, 'sys': 0.0449}, 
'SIZE-5000-NTH-1-1617725186.csv': {'elapsed': 0.1, 'user': 0.044820000000000006, 'sys': 0.05018000000000001}, 
'SIZE-5000-NTH-2-1617725186.csv': {'elapsed': 0.060940000000000015, 'user': 0.06318, 'sys': 0.06408000000000001}, 
'SIZE-5000-NTH-4-1617725186.csv': {'elapsed': 0.04954000000000001, 'user': 0.10830000000000001, 'sys': 0.08742}, 
'SIZE-5000-NTH-8-1617725186.csv': {'elapsed': 0.0412, 'user': 0.2349, 'sys': 0.13522}, 
'SIZE-8000-NTH-0-1617725186.csv': {'elapsed': 0.498, 'user': 0.36016, 'sys': 0.13266000000000003}, 
'SIZE-8000-NTH-1-1617725186.csv': {'elapsed': 0.25736, 'user': 0.12106, 'sys': 0.13219999999999998}, 
'SIZE-8000-NTH-2-1617725186.csv': {'elapsed': 0.16979999999999995, 'user': 0.16698, 'sys': 0.17101999999999998}, 
'SIZE-8000-NTH-4-1617725186.csv': {'elapsed': 0.12668, 'user': 0.28018, 'sys': 0.23224}, 
'SIZE-8000-NTH-8-1617725186.csv': {'elapsed': 0.11696000000000001, 'user': 0.55274, 'sys': 0.35775999999999997}}
2021-04-06 18:53:48,355 ------------------------------
2021-04-06 18:53:48,355 Speedup P = 0 & Problem Size = 10000 -> 1.0
2021-04-06 18:53:48,355 ------------------------------
2021-04-06 18:53:48,355 ------------------------------
2021-04-06 18:53:48,355 Speedup P = 1 & Problem Size = 10000 -> 1.9262803034058793
2021-04-06 18:53:48,355 ------------------------------
2021-04-06 18:53:48,355 ------------------------------
2021-04-06 18:53:48,355 Speedup P = 2 & Problem Size = 10000 -> 2.892072943803498
2021-04-06 18:53:48,355 ------------------------------
2021-04-06 18:53:48,355 ------------------------------
2021-04-06 18:53:48,355 Speedup P = 4 & Problem Size = 10000 -> 3.863094054483992
2021-04-06 18:53:48,355 ------------------------------
2021-04-06 18:53:48,355 ------------------------------
2021-04-06 18:53:48,355 Speedup P = 8 & Problem Size = 10000 -> 4.312909312909312
2021-04-06 18:53:48,355 ------------------------------
2021-04-06 18:53:48,355 ------------------------------
2021-04-06 18:53:48,355 Speedup P = 0 & Problem Size = 5000 -> 1.0
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 Speedup P = 1 & Problem Size = 5000 -> 1.8201999999999998
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 Speedup P = 2 & Problem Size = 5000 -> 2.9868723334427294
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 Speedup P = 4 & Problem Size = 5000 -> 3.6742026645135235
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 Speedup P = 8 & Problem Size = 5000 -> 4.417961165048544
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 Speedup P = 0 & Problem Size = 8000 -> 1.0
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 Speedup P = 1 & Problem Size = 8000 -> 1.935032639104756
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 Speedup P = 2 & Problem Size = 8000 -> 2.9328621908127217
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 Speedup P = 4 & Problem Size = 8000 -> 3.9311651405115255
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 ------------------------------
2021-04-06 18:53:48,356 Speedup P = 8 & Problem Size = 8000 -> 4.257865937072503
2021-04-06 18:53:48,356 ------------------------------

Dynamic Schedule with chunk size
2021-04-06 19:33:33,419 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-06 19:33:33,419 Means : {'SIZE-10000-NTH-0-1617728348.csv': {'elapsed': 0.775, 'user': 0.5631600000000001, 'sys': 0.20815999999999998}, 
'SIZE-10000-NTH-1-1617728348.csv': {'elapsed': 0.40324000000000004, 'user': 0.19092, 'sys': 0.20748000000000003}, 
'SIZE-10000-NTH-2-1617728348.csv': {'elapsed': 0.2679, 'user': 0.25216, 'sys': 0.26724000000000003}, 
'SIZE-10000-NTH-4-1617728348.csv': {'elapsed': 0.2003, 'user': 0.39486, 'sys': 0.36274}, 
'SIZE-10000-NTH-8-1617728348.csv': {'elapsed': 0.18008, 'user': 0.75668, 'sys': 0.5549400000000001}, 
'SIZE-5000-NTH-0-1617728348.csv': {'elapsed': 0.18071999999999996, 'user': 0.12986, 'sys': 0.046020000000000005}, 
'SIZE-5000-NTH-1-1617728348.csv': {'elapsed': 0.10024000000000001, 'user': 0.04518, 'sys': 0.05042}, 
'SIZE-5000-NTH-2-1617728348.csv': {'elapsed': 0.06062000000000002, 'user': 0.06244000000000001, 'sys': 0.06518}, 
'SIZE-5000-NTH-4-1617728348.csv': {'elapsed': 0.04966, 'user': 0.10766000000000002, 'sys': 0.08854000000000001}, 
'SIZE-5000-NTH-8-1617728348.csv': {'elapsed': 0.04114, 'user': 0.23406000000000002, 'sys': 0.13604000000000002}, 
'SIZE-8000-NTH-0-1617728348.csv': {'elapsed': 0.49668000000000007, 'user': 0.35852, 'sys': 0.13313999999999998}, 
'SIZE-8000-NTH-1-1617728348.csv': {'elapsed': 0.25697999999999993, 'user': 0.12088, 'sys': 0.13198000000000001}, 
'SIZE-8000-NTH-2-1617728348.csv': {'elapsed': 0.16955999999999993, 'user': 0.16706000000000001, 'sys': 0.17042}, 
'SIZE-8000-NTH-4-1617728348.csv': {'elapsed': 0.12666, 'user': 0.28084, 'sys': 0.23112}, 
'SIZE-8000-NTH-8-1617728348.csv': {'elapsed': 0.11708000000000002, 'user': 0.5534000000000001, 'sys': 0.3554399999999999}}
2021-04-06 19:33:33,419 ------------------------------
2021-04-06 19:33:33,419 Speedup P = 0 & Problem Size = 10000 -> 1.0
2021-04-06 19:33:33,419 ------------------------------
2021-04-06 19:33:33,419 ------------------------------
2021-04-06 19:33:33,419 Speedup P = 1 & Problem Size = 10000 -> 1.9219323479813508
2021-04-06 19:33:33,419 ------------------------------
2021-04-06 19:33:33,419 ------------------------------
2021-04-06 19:33:33,419 Speedup P = 2 & Problem Size = 10000 -> 2.8928704740574838
2021-04-06 19:33:33,419 ------------------------------
2021-04-06 19:33:33,420 ------------------------------
2021-04-06 19:33:33,420 Speedup P = 4 & Problem Size = 10000 -> 3.8691962056914626
2021-04-06 19:33:33,420 ------------------------------
2021-04-06 19:33:33,420 ------------------------------
2021-04-06 19:33:33,420 Speedup P = 8 & Problem Size = 10000 -> 4.303642825410929
2021-04-06 19:33:33,420 ------------------------------
2021-04-06 19:33:33,420 ------------------------------
2021-04-06 19:33:33,420 Speedup P = 0 & Problem Size = 5000 -> 1.0
2021-04-06 19:33:33,420 ------------------------------
2021-04-06 19:33:33,420 ------------------------------
2021-04-06 19:33:33,420 Speedup P = 1 & Problem Size = 5000 -> 1.8028731045490816
2021-04-06 19:33:33,420 ------------------------------
2021-04-06 19:33:33,420 ------------------------------
2021-04-06 19:33:33,420 Speedup P = 2 & Problem Size = 5000 -> 2.9811943253051782
2021-04-06 19:33:33,420 ------------------------------
2021-04-06 19:33:33,420 ------------------------------
2021-04-06 19:33:33,420 Speedup P = 4 & Problem Size = 5000 -> 3.6391461941200154
2021-04-06 19:33:33,421 ------------------------------
2021-04-06 19:33:33,421 ------------------------------
2021-04-06 19:33:33,421 Speedup P = 8 & Problem Size = 5000 -> 4.392805055906659
2021-04-06 19:33:33,421 ------------------------------
2021-04-06 19:33:33,421 ------------------------------
2021-04-06 19:33:33,421 Speedup P = 0 & Problem Size = 8000 -> 1.0
2021-04-06 19:33:33,421 ------------------------------
2021-04-06 19:33:33,421 ------------------------------
2021-04-06 19:33:33,421 Speedup P = 1 & Problem Size = 8000 -> 1.932757413028252
2021-04-06 19:33:33,421 ------------------------------
2021-04-06 19:33:33,421 ------------------------------
2021-04-06 19:33:33,421 Speedup P = 2 & Problem Size = 8000 -> 2.9292285916489753
2021-04-06 19:33:33,421 ------------------------------
2021-04-06 19:33:33,421 ------------------------------
2021-04-06 19:33:33,421 Speedup P = 4 & Problem Size = 8000 -> 3.9213642823306496
2021-04-06 19:33:33,421 ------------------------------
2021-04-06 19:33:33,421 ------------------------------
2021-04-06 19:33:33,421 Speedup P = 8 & Problem Size = 8000 -> 4.242227536727024
2021-04-06 19:33:33,421 ------------------------------

2021-04-07 10:00:42,938 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-07 10:00:42,938 Means : {'SIZE-10000x2000-NTH-0-1617780588.csv': {'elapsed': 0.15127999999999997, 'user': 0.10922000000000003, 'sys': 0.037820000000000006}, 
'SIZE-10000x2000-NTH-1-1617780588.csv': {'elapsed': 0.08016, 'user': 0.040920000000000005, 'sys': 0.03814}, 
'SIZE-10000x2000-NTH-2-1617780588.csv': {'elapsed': 0.05002, 'user': 0.056380000000000006, 'sys': 0.050460000000000005}, 
'SIZE-10000x2000-NTH-4-1617780588.csv': {'elapsed': 0.04012, 'user': 0.09282000000000001, 'sys': 0.06778000000000002}, 
'SIZE-10000x2000-NTH-8-1617780588.csv': {'elapsed': 0.037480000000000006, 'user': 0.20046, 'sys': 0.10358000000000002}, 
'SIZE-10000x8000-NTH-0-1617780588.csv': {'elapsed': 0.62102, 'user': 0.45088, 'sys': 0.16326}, 
'SIZE-10000x8000-NTH-1-1617780588.csv': {'elapsed': 0.34417999999999993, 'user': 0.17608, 'sys': 0.16256}, 
'SIZE-10000x8000-NTH-2-1617780588.csv': {'elapsed': 0.22846, 'user': 0.23334, 'sys': 0.21212}, 
'SIZE-10000x8000-NTH-4-1617780588.csv': {'elapsed': 0.16559999999999997, 'user': 0.36613999999999997, 'sys': 0.28904}, 
'SIZE-10000x8000-NTH-8-1617780588.csv': {'elapsed': 0.15011999999999998, 'user': 0.7006600000000001, 'sys': 0.4328}, 
'SIZE-5000x2000-NTH-0-1617780588.csv': {'elapsed': 0.06740000000000002, 'user': 0.04644, 'sys': 0.014100000000000001}, 
'SIZE-5000x2000-NTH-1-1617780588.csv': {'elapsed': 0.04, 'user': 0.01846, 'sys': 0.01758}, 
'SIZE-5000x2000-NTH-2-1617780588.csv': {'elapsed': 0.024560000000000002, 'user': 0.025860000000000005, 'sys': 0.022}, 
'SIZE-5000x2000-NTH-4-1617780588.csv': {'elapsed': 0.019759999999999996, 'user': 0.04436, 'sys': 0.03064}, 
'SIZE-5000x2000-NTH-8-1617780588.csv': {'elapsed': 0.01714, 'user': 0.09622, 'sys': 0.04812}, 
'SIZE-5000x8000-NTH-0-1617780588.csv': {'elapsed': 0.30841999999999997, 'user': 0.22254000000000002, 'sys': 0.08018}, 
'SIZE-5000x8000-NTH-1-1617780588.csv': {'elapsed': 0.17003999999999997, 'user': 0.08481999999999999, 'sys': 0.08064}, 
'SIZE-5000x8000-NTH-2-1617780588.csv': {'elapsed': 0.11000000000000003, 'user': 0.11596000000000001, 'sys': 0.10384000000000002}, 
'SIZE-5000x8000-NTH-4-1617780588.csv': {'elapsed': 0.08030000000000001, 'user': 0.19106, 'sys': 0.14076}, 
'SIZE-5000x8000-NTH-8-1617780588.csv': {'elapsed': 0.07456, 'user': 0.40586, 'sys': 0.21630000000000002}}
2021-04-07 10:00:42,938 ------------------------------
2021-04-07 10:00:42,938 Speedup P = 0 & Problem Size = 10000x2000 -> 1.0
2021-04-07 10:00:42,938 Efficiency P = 0 & Problem Size = 10000x2000 -> inf
2021-04-07 10:00:42,938 ------------------------------
2021-04-07 10:00:42,938 ------------------------------
2021-04-07 10:00:42,938 Speedup P = 1 & Problem Size = 10000x2000 -> 1.8872255489021954
2021-04-07 10:00:42,938 Efficiency P = 1 & Problem Size = 10000x2000 -> 1.8872255489021954
2021-04-07 10:00:42,938 ------------------------------
2021-04-07 10:00:42,938 ------------------------------
2021-04-07 10:00:42,938 Speedup P = 2 & Problem Size = 10000x2000 -> 3.024390243902438
2021-04-07 10:00:42,939 Efficiency P = 2 & Problem Size = 10000x2000 -> 1.512195121951219
2021-04-07 10:00:42,939 ------------------------------
2021-04-07 10:00:42,939 ------------------------------
2021-04-07 10:00:42,939 Speedup P = 4 & Problem Size = 10000x2000 -> 3.7706879361914245
2021-04-07 10:00:42,939 Efficiency P = 4 & Problem Size = 10000x2000 -> 0.9426719840478561
2021-04-07 10:00:42,939 ------------------------------
2021-04-07 10:00:42,939 ------------------------------
2021-04-07 10:00:42,939 Speedup P = 8 & Problem Size = 10000x2000 -> 4.036286019210244
2021-04-07 10:00:42,939 Efficiency P = 8 & Problem Size = 10000x2000 -> 0.5045357524012805
2021-04-07 10:00:42,939 ------------------------------
2021-04-07 10:00:42,939 ------------------------------
2021-04-07 10:00:42,939 Speedup P = 0 & Problem Size = 10000x8000 -> 1.0
2021-04-07 10:00:42,939 Efficiency P = 0 & Problem Size = 10000x8000 -> inf
2021-04-07 10:00:42,939 ------------------------------
2021-04-07 10:00:42,939 ------------------------------
2021-04-07 10:00:42,939 Speedup P = 1 & Problem Size = 10000x8000 -> 1.8043465628450233
2021-04-07 10:00:42,939 Efficiency P = 1 & Problem Size = 10000x8000 -> 1.8043465628450233
2021-04-07 10:00:42,939 ------------------------------
2021-04-07 10:00:42,939 ------------------------------
2021-04-07 10:00:42,940 Speedup P = 2 & Problem Size = 10000x8000 -> 2.718287665236803
2021-04-07 10:00:42,940 Efficiency P = 2 & Problem Size = 10000x8000 -> 1.3591438326184015
2021-04-07 10:00:42,940 ------------------------------
2021-04-07 10:00:42,940 ------------------------------
2021-04-07 10:00:42,940 Speedup P = 4 & Problem Size = 10000x8000 -> 3.7501207729468606
2021-04-07 10:00:42,940 Efficiency P = 4 & Problem Size = 10000x8000 -> 0.9375301932367152
2021-04-07 10:00:42,940 ------------------------------
2021-04-07 10:00:42,940 ------------------------------
2021-04-07 10:00:42,940 Speedup P = 8 & Problem Size = 10000x8000 -> 4.136823874233947
2021-04-07 10:00:42,940 Efficiency P = 8 & Problem Size = 10000x8000 -> 0.5171029842792434
2021-04-07 10:00:42,940 ------------------------------
2021-04-07 10:00:42,940 ------------------------------
2021-04-07 10:00:42,940 Speedup P = 0 & Problem Size = 5000x2000 -> 1.0
2021-04-07 10:00:42,940 Efficiency P = 0 & Problem Size = 5000x2000 -> inf
2021-04-07 10:00:42,940 ------------------------------
2021-04-07 10:00:42,941 ------------------------------
2021-04-07 10:00:42,941 Speedup P = 1 & Problem Size = 5000x2000 -> 1.6850000000000003
2021-04-07 10:00:42,941 Efficiency P = 1 & Problem Size = 5000x2000 -> 1.6850000000000003
2021-04-07 10:00:42,941 ------------------------------
2021-04-07 10:00:42,941 ------------------------------
2021-04-07 10:00:42,941 Speedup P = 2 & Problem Size = 5000x2000 -> 2.7442996742671015
2021-04-07 10:00:42,941 Speedup P = 2 & Problem Size = 5000x2000 -> 1.3721498371335508
2021-04-07 10:00:42,941 ------------------------------
2021-04-07 10:00:42,941 ------------------------------
2021-04-07 10:00:42,941 Speedup P = 4 & Problem Size = 5000x2000 -> 3.4109311740890704
2021-04-07 10:00:42,941 Speedup P = 4 & Problem Size = 5000x2000 -> 0.8527327935222676
2021-04-07 10:00:42,941 ------------------------------
2021-04-07 10:00:42,941 ------------------------------
2021-04-07 10:00:42,941 Speedup P = 8 & Problem Size = 5000x2000 -> 3.932322053675614
2021-04-07 10:00:42,941 Speedup P = 8 & Problem Size = 5000x2000 -> 0.49154025670945173
2021-04-07 10:00:42,941 ------------------------------
2021-04-07 10:00:42,942 ------------------------------
2021-04-07 10:00:42,942 Speedup P = 0 & Problem Size = 5000x8000 -> 1.0
2021-04-07 10:00:42,942 Speedup P = 0 & Problem Size = 5000x8000 -> inf
2021-04-07 10:00:42,942 ------------------------------
2021-04-07 10:00:42,942 ------------------------------
2021-04-07 10:00:42,942 Speedup P = 1 & Problem Size = 5000x8000 -> 1.8138085156433783
2021-04-07 10:00:42,942 Speedup P = 1 & Problem Size = 5000x8000 -> 1.8138085156433783
2021-04-07 10:00:42,942 ------------------------------
2021-04-07 10:00:42,942 ------------------------------
2021-04-07 10:00:42,942 Speedup P = 2 & Problem Size = 5000x8000 -> 2.8038181818181807
2021-04-07 10:00:42,942 Speedup P = 2 & Problem Size = 5000x8000 -> 1.4019090909090903
2021-04-07 10:00:42,942 ------------------------------
2021-04-07 10:00:42,942 ------------------------------
2021-04-07 10:00:42,942 Speedup P = 4 & Problem Size = 5000x8000 -> 3.8408468244084673
2021-04-07 10:00:42,942 Speedup P = 4 & Problem Size = 5000x8000 -> 0.9602117061021168
2021-04-07 10:00:42,942 ------------------------------
2021-04-07 10:00:42,942 ------------------------------
2021-04-07 10:00:42,942 Speedup P = 8 & Problem Size = 5000x8000 -> 4.136534334763948
2021-04-07 10:00:42,942 Speedup P = 8 & Problem Size = 5000x8000 -> 0.5170667918454935
2021-04-07 10:00:42,943 ------------------------------
2021-04-10 11:19:52,006 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:20:35,122 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:20:35,123 NumExpr defaulting to 8 threads.
2021-04-10 11:20:35,142 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:22:30,559 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:22:30,559 NumExpr defaulting to 8 threads.
2021-04-10 11:22:30,580 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:24:47,356 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:24:47,356 NumExpr defaulting to 8 threads.
2021-04-10 11:24:47,379 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:26:02,889 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:26:02,889 NumExpr defaulting to 8 threads.
2021-04-10 11:26:02,911 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:28:32,060 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:28:32,060 NumExpr defaulting to 8 threads.
2021-04-10 11:28:32,082 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:30:41,375 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:30:41,375 NumExpr defaulting to 8 threads.
2021-04-10 11:30:41,396 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:32:24,911 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:32:24,911 NumExpr defaulting to 8 threads.
2021-04-10 11:32:24,932 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:33:16,726 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:33:16,726 NumExpr defaulting to 8 threads.
2021-04-10 11:33:16,747 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:33:53,488 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:33:53,491 NumExpr defaulting to 8 threads.
2021-04-10 11:33:53,512 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:38:36,302 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:38:36,302 NumExpr defaulting to 8 threads.
2021-04-10 11:38:36,322 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:39:29,025 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:39:29,025 NumExpr defaulting to 8 threads.
2021-04-10 11:39:29,044 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:41:25,751 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:41:25,752 NumExpr defaulting to 8 threads.
2021-04-10 11:41:25,773 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:44:43,860 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:44:43,861 NumExpr defaulting to 8 threads.
2021-04-10 11:44:43,882 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:45:05,457 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:45:05,458 NumExpr defaulting to 8 threads.
2021-04-10 11:45:05,479 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:45:29,805 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:45:29,806 NumExpr defaulting to 8 threads.
2021-04-10 11:45:29,826 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:46:24,485 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:46:24,485 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:47:27,624 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:47:27,624 NumExpr defaulting to 8 threads.
2021-04-10 11:47:27,647 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:47:52,525 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:47:52,525 NumExpr defaulting to 8 threads.
2021-04-10 11:47:52,547 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:48:42,579 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:48:42,579 NumExpr defaulting to 8 threads.
2021-04-10 11:48:59,431 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:48:59,431 NumExpr defaulting to 8 threads.
2021-04-10 11:48:59,453 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:49:19,025 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:49:19,025 NumExpr defaulting to 8 threads.
2021-04-10 11:49:19,048 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:52:35,236 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:52:35,236 NumExpr defaulting to 8 threads.
2021-04-10 11:52:35,262 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:54:29,755 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 11:54:29,756 NumExpr defaulting to 8 threads.
2021-04-10 11:54:29,777 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 11:54:29,801 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 12:01:03,367 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 12:01:03,367 NumExpr defaulting to 8 threads.
2021-04-10 12:02:40,333 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 12:02:40,333 NumExpr defaulting to 8 threads.
2021-04-10 12:04:20,816 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 12:04:20,816 NumExpr defaulting to 8 threads.
2021-04-10 12:04:53,693 Note: NumExpr detected 12 cores but "NUMEXPR_MAX_THREADS" not set, so enforcing safe limit of 8.
2021-04-10 12:04:53,693 NumExpr defaulting to 8 threads.
2021-04-10 12:06:55,040 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 12:06:55,664 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 12:08:12,517 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 12:08:14,455 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 12:08:56,245 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 12:08:56,593 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 12:11:34,529 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 12:11:34,885 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 12:13:57,680 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 12:13:58,076 Problem size grows going towards the end of the file.
 All of the data was computed using square matrices
2021-04-10 12:53:10,050 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 12:53:10,051 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 12:53:46,547 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 12:53:46,549 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 12:54:16,654 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 12:54:16,655 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 12:54:38,757 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 12:54:38,757 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 12:55:02,340 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 12:55:02,341 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 12:55:49,530 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 12:55:49,531 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 12:57:50,422 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 12:57:50,423 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 12:57:56,164 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 12:57:56,165 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:02:20,867 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:02:20,867 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:02:45,924 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:02:45,925 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:05:45,296 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:05:45,297 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:05:59,218 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:05:59,219 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:06:10,500 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:06:10,501 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:06:34,345 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:06:34,345 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:07:11,236 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:07:11,237 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:07:31,140 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:07:31,141 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:08:08,153 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:08:08,154 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:08:20,517 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:08:20,518 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:08:31,218 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:08:31,219 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:08:39,630 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:08:39,631 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:10:09,138 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:10:09,139 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:11:40,752 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:11:40,753 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:12:52,483 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:12:52,484 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:13:16,153 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:13:16,154 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:13:26,501 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:13:26,502 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:13:45,037 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:13:45,038 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:14:02,001 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:14:02,001 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:14:09,988 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:14:09,989 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:14:34,796 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:14:34,796 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:15:16,210 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:15:16,211 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:15:18,997 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:15:18,997 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:15:58,357 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:15:58,358 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:16:05,309 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:16:05,310 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:16:38,461 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:16:38,461 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:16:41,370 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:16:41,370 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:17:01,837 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 13:17:01,837 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:41:28,179 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:41:28,180 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:41:59,027 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:41:59,028 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:42:27,710 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:42:27,710 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:42:43,131 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:42:43,132 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:42:58,265 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:42:58,265 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:43:10,060 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:43:10,061 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:43:47,721 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:43:47,722 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:44:44,013 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:44:44,013 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:44:50,700 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:44:50,701 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:45:05,321 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:45:05,322 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:45:22,123 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:45:22,123 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:45:48,610 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:45:48,611 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:45:55,044 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:45:55,045 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:47:01,837 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:47:01,837 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:47:17,755 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:47:17,756 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:47:32,082 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:47:32,082 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:47:37,744 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:47:37,745 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:47:46,411 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:47:46,412 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:47:54,816 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:47:54,816 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:48:37,427 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:48:37,427 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:50:44,075 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 14:50:44,075 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:30:43,896 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:30:43,897 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:30:57,842 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:30:57,843 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:31:10,469 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:31:10,470 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:32:00,432 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:32:00,432 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:32:11,995 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:32:11,997 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:32:20,422 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:32:20,423 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:32:36,474 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:32:36,474 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:34:00,652 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:34:00,653 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:34:20,433 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:34:20,434 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:34:25,512 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:34:25,513 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:34:37,743 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:34:37,744 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:34:49,910 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:34:49,911 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:34:59,586 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:34:59,587 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:35:03,347 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:35:03,348 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:35:19,367 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:35:19,368 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:35:23,622 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:35:23,623 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:35:41,886 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:35:41,887 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:36:12,415 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:36:12,416 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:36:34,874 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:36:34,875 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:36:43,335 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:36:43,336 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:36:53,467 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:36:53,468 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:36:56,290 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:36:56,291 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:37:28,265 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:37:28,266 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:38:14,788 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:38:14,788 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:38:17,259 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:38:17,260 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:38:28,677 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:38:28,677 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:38:51,380 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:38:51,381 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:39:01,775 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:39:01,775 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:39:11,508 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:39:11,508 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:39:20,494 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:39:20,495 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:39:32,834 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:39:32,834 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:39:42,530 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:39:42,531 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:40:06,726 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:40:06,726 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:40:31,510 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:40:31,511 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:40:50,254 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:40:50,255 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:40:58,097 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:40:58,098 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:43:00,052 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:43:00,053 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:43:33,453 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:43:33,454 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:45:25,802 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:45:25,803 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:45:34,237 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:45:34,238 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:45:49,488 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:45:49,489 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:46:01,283 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 15:46:01,284 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:04:45,730 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:04:45,731 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:04:46,240 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:04:46,240 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:06:16,758 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:06:16,760 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:06:17,288 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:06:17,289 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:07:09,084 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:07:09,085 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:07:09,598 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:07:09,599 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:25:13,688 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:25:13,689 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:26:55,964 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:26:55,965 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:27:02,864 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:27:02,865 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:27:13,168 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:27:13,169 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:27:16,097 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2021-04-10 16:27:16,098 Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
